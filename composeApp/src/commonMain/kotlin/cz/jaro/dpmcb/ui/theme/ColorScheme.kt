package cz.jaro.dpmcb.ui.theme

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme


val LightColorsRed = lightColorScheme(
    primary = md_theme_light_primary_red,
    onPrimary = md_theme_light_onPrimary_red,
    primaryContainer = md_theme_light_primaryContainer_red,
    onPrimaryContainer = md_theme_light_onPrimaryContainer_red,
    secondary = md_theme_light_secondary_red,
    onSecondary = md_theme_light_onSecondary_red,
    secondaryContainer = md_theme_light_secondaryContainer_red,
    onSecondaryContainer = md_theme_light_onSecondaryContainer_red,
    tertiary = md_theme_light_tertiary_red,
    onTertiary = md_theme_light_onTertiary_red,
    tertiaryContainer = md_theme_light_tertiaryContainer_red,
    onTertiaryContainer = md_theme_light_onTertiaryContainer_red,
    error = md_theme_light_error_red,
    errorContainer = md_theme_light_errorContainer_red,
    onError = md_theme_light_onError_red,
    onErrorContainer = md_theme_light_onErrorContainer_red,
    background = md_theme_light_background_red,
    onBackground = md_theme_light_onBackground_red,
    surface = md_theme_light_surface_red,
    onSurface = md_theme_light_onSurface_red,
    surfaceVariant = md_theme_light_surfaceVariant_red,
    onSurfaceVariant = md_theme_light_onSurfaceVariant_red,
    outline = md_theme_light_outline_red,
    inverseOnSurface = md_theme_light_inverseOnSurface_red,
    inverseSurface = md_theme_light_inverseSurface_red,
    inversePrimary = md_theme_light_inversePrimary_red,
    surfaceTint = md_theme_light_surfaceTint_red,
    outlineVariant = md_theme_light_outlineVariant_red,
    scrim = md_theme_light_scrim_red,
)

val DarkColorsRed = darkColorScheme(
    primary = md_theme_dark_primary_red,
    onPrimary = md_theme_dark_onPrimary_red,
    primaryContainer = md_theme_dark_primaryContainer_red,
    onPrimaryContainer = md_theme_dark_onPrimaryContainer_red,
    secondary = md_theme_dark_secondary_red,
    onSecondary = md_theme_dark_onSecondary_red,
    secondaryContainer = md_theme_dark_secondaryContainer_red,
    onSecondaryContainer = md_theme_dark_onSecondaryContainer_red,
    tertiary = md_theme_dark_tertiary_red,
    onTertiary = md_theme_dark_onTertiary_red,
    tertiaryContainer = md_theme_dark_tertiaryContainer_red,
    onTertiaryContainer = md_theme_dark_onTertiaryContainer_red,
    error = md_theme_dark_error_red,
    errorContainer = md_theme_dark_errorContainer_red,
    onError = md_theme_dark_onError_red,
    onErrorContainer = md_theme_dark_onErrorContainer_red,
    background = md_theme_dark_background_red,
    onBackground = md_theme_dark_onBackground_red,
    surface = md_theme_dark_surface_red,
    onSurface = md_theme_dark_onSurface_red,
    surfaceVariant = md_theme_dark_surfaceVariant_red,
    onSurfaceVariant = md_theme_dark_onSurfaceVariant_red,
    outline = md_theme_dark_outline_red,
    inverseOnSurface = md_theme_dark_inverseOnSurface_red,
    inverseSurface = md_theme_dark_inverseSurface_red,
    inversePrimary = md_theme_dark_inversePrimary_red,
    surfaceTint = md_theme_dark_surfaceTint_red,
    outlineVariant = md_theme_dark_outlineVariant_red,
    scrim = md_theme_dark_scrim_red,
)


val LightColorsGreen = lightColorScheme(
    primary = md_theme_light_primary_green,
    onPrimary = md_theme_light_onPrimary_green,
    primaryContainer = md_theme_light_primaryContainer_green,
    onPrimaryContainer = md_theme_light_onPrimaryContainer_green,
    secondary = md_theme_light_secondary_green,
    onSecondary = md_theme_light_onSecondary_green,
    secondaryContainer = md_theme_light_secondaryContainer_green,
    onSecondaryContainer = md_theme_light_onSecondaryContainer_green,
    tertiary = md_theme_light_tertiary_green,
    onTertiary = md_theme_light_onTertiary_green,
    tertiaryContainer = md_theme_light_tertiaryContainer_green,
    onTertiaryContainer = md_theme_light_onTertiaryContainer_green,
    error = md_theme_light_error_green,
    errorContainer = md_theme_light_errorContainer_green,
    onError = md_theme_light_onError_green,
    onErrorContainer = md_theme_light_onErrorContainer_green,
    background = md_theme_light_background_green,
    onBackground = md_theme_light_onBackground_green,
    surface = md_theme_light_surface_green,
    onSurface = md_theme_light_onSurface_green,
    surfaceVariant = md_theme_light_surfaceVariant_green,
    onSurfaceVariant = md_theme_light_onSurfaceVariant_green,
    outline = md_theme_light_outline_green,
    inverseOnSurface = md_theme_light_inverseOnSurface_green,
    inverseSurface = md_theme_light_inverseSurface_green,
    inversePrimary = md_theme_light_inversePrimary_green,
    surfaceTint = md_theme_light_surfaceTint_green,
    outlineVariant = md_theme_light_outlineVariant_green,
    scrim = md_theme_light_scrim_green,
)

val DarkColorsGreen = darkColorScheme(
    primary = md_theme_dark_primary_green,
    onPrimary = md_theme_dark_onPrimary_green,
    primaryContainer = md_theme_dark_primaryContainer_green,
    onPrimaryContainer = md_theme_dark_onPrimaryContainer_green,
    secondary = md_theme_dark_secondary_green,
    onSecondary = md_theme_dark_onSecondary_green,
    secondaryContainer = md_theme_dark_secondaryContainer_green,
    onSecondaryContainer = md_theme_dark_onSecondaryContainer_green,
    tertiary = md_theme_dark_tertiary_green,
    onTertiary = md_theme_dark_onTertiary_green,
    tertiaryContainer = md_theme_dark_tertiaryContainer_green,
    onTertiaryContainer = md_theme_dark_onTertiaryContainer_green,
    error = md_theme_dark_error_green,
    errorContainer = md_theme_dark_errorContainer_green,
    onError = md_theme_dark_onError_green,
    onErrorContainer = md_theme_dark_onErrorContainer_green,
    background = md_theme_dark_background_green,
    onBackground = md_theme_dark_onBackground_green,
    surface = md_theme_dark_surface_green,
    onSurface = md_theme_dark_onSurface_green,
    surfaceVariant = md_theme_dark_surfaceVariant_green,
    onSurfaceVariant = md_theme_dark_onSurfaceVariant_green,
    outline = md_theme_dark_outline_green,
    inverseOnSurface = md_theme_dark_inverseOnSurface_green,
    inverseSurface = md_theme_dark_inverseSurface_green,
    inversePrimary = md_theme_dark_inversePrimary_green,
    surfaceTint = md_theme_dark_surfaceTint_green,
    outlineVariant = md_theme_dark_outlineVariant_green,
    scrim = md_theme_dark_scrim_green,
)


val LightColorsBlue = lightColorScheme(
    primary = md_theme_light_primary_blue,
    onPrimary = md_theme_light_onPrimary_blue,
    primaryContainer = md_theme_light_primaryContainer_blue,
    onPrimaryContainer = md_theme_light_onPrimaryContainer_blue,
    secondary = md_theme_light_secondary_blue,
    onSecondary = md_theme_light_onSecondary_blue,
    secondaryContainer = md_theme_light_secondaryContainer_blue,
    onSecondaryContainer = md_theme_light_onSecondaryContainer_blue,
    tertiary = md_theme_light_tertiary_blue,
    onTertiary = md_theme_light_onTertiary_blue,
    tertiaryContainer = md_theme_light_tertiaryContainer_blue,
    onTertiaryContainer = md_theme_light_onTertiaryContainer_blue,
    error = md_theme_light_error_blue,
    errorContainer = md_theme_light_errorContainer_blue,
    onError = md_theme_light_onError_blue,
    onErrorContainer = md_theme_light_onErrorContainer_blue,
    background = md_theme_light_background_blue,
    onBackground = md_theme_light_onBackground_blue,
    surface = md_theme_light_surface_blue,
    onSurface = md_theme_light_onSurface_blue,
    surfaceVariant = md_theme_light_surfaceVariant_blue,
    onSurfaceVariant = md_theme_light_onSurfaceVariant_blue,
    outline = md_theme_light_outline_blue,
    inverseOnSurface = md_theme_light_inverseOnSurface_blue,
    inverseSurface = md_theme_light_inverseSurface_blue,
    inversePrimary = md_theme_light_inversePrimary_blue,
    surfaceTint = md_theme_light_surfaceTint_blue,
    outlineVariant = md_theme_light_outlineVariant_blue,
    scrim = md_theme_light_scrim_blue,
)

val DarkColorsBlue = darkColorScheme(
    primary = md_theme_dark_primary_blue,
    onPrimary = md_theme_dark_onPrimary_blue,
    primaryContainer = md_theme_dark_primaryContainer_blue,
    onPrimaryContainer = md_theme_dark_onPrimaryContainer_blue,
    secondary = md_theme_dark_secondary_blue,
    onSecondary = md_theme_dark_onSecondary_blue,
    secondaryContainer = md_theme_dark_secondaryContainer_blue,
    onSecondaryContainer = md_theme_dark_onSecondaryContainer_blue,
    tertiary = md_theme_dark_tertiary_blue,
    onTertiary = md_theme_dark_onTertiary_blue,
    tertiaryContainer = md_theme_dark_tertiaryContainer_blue,
    onTertiaryContainer = md_theme_dark_onTertiaryContainer_blue,
    error = md_theme_dark_error_blue,
    errorContainer = md_theme_dark_errorContainer_blue,
    onError = md_theme_dark_onError_blue,
    onErrorContainer = md_theme_dark_onErrorContainer_blue,
    background = md_theme_dark_background_blue,
    onBackground = md_theme_dark_onBackground_blue,
    surface = md_theme_dark_surface_blue,
    onSurface = md_theme_dark_onSurface_blue,
    surfaceVariant = md_theme_dark_surfaceVariant_blue,
    onSurfaceVariant = md_theme_dark_onSurfaceVariant_blue,
    outline = md_theme_dark_outline_blue,
    inverseOnSurface = md_theme_dark_inverseOnSurface_blue,
    inverseSurface = md_theme_dark_inverseSurface_blue,
    inversePrimary = md_theme_dark_inversePrimary_blue,
    surfaceTint = md_theme_dark_surfaceTint_blue,
    outlineVariant = md_theme_dark_outlineVariant_blue,
    scrim = md_theme_dark_scrim_blue,
)


val LightColorsYellow = lightColorScheme(
    primary = md_theme_light_primary_yellow,
    onPrimary = md_theme_light_onPrimary_yellow,
    primaryContainer = md_theme_light_primaryContainer_yellow,
    onPrimaryContainer = md_theme_light_onPrimaryContainer_yellow,
    secondary = md_theme_light_secondary_yellow,
    onSecondary = md_theme_light_onSecondary_yellow,
    secondaryContainer = md_theme_light_secondaryContainer_yellow,
    onSecondaryContainer = md_theme_light_onSecondaryContainer_yellow,
    tertiary = md_theme_light_tertiary_yellow,
    onTertiary = md_theme_light_onTertiary_yellow,
    tertiaryContainer = md_theme_light_tertiaryContainer_yellow,
    onTertiaryContainer = md_theme_light_onTertiaryContainer_yellow,
    error = md_theme_light_error_yellow,
    errorContainer = md_theme_light_errorContainer_yellow,
    onError = md_theme_light_onError_yellow,
    onErrorContainer = md_theme_light_onErrorContainer_yellow,
    background = md_theme_light_background_yellow,
    onBackground = md_theme_light_onBackground_yellow,
    surface = md_theme_light_surface_yellow,
    onSurface = md_theme_light_onSurface_yellow,
    surfaceVariant = md_theme_light_surfaceVariant_yellow,
    onSurfaceVariant = md_theme_light_onSurfaceVariant_yellow,
    outline = md_theme_light_outline_yellow,
    inverseOnSurface = md_theme_light_inverseOnSurface_yellow,
    inverseSurface = md_theme_light_inverseSurface_yellow,
    inversePrimary = md_theme_light_inversePrimary_yellow,
    surfaceTint = md_theme_light_surfaceTint_yellow,
    outlineVariant = md_theme_light_outlineVariant_yellow,
    scrim = md_theme_light_scrim_yellow,
)

val DarkColorsYellow = darkColorScheme(
    primary = md_theme_dark_primary_yellow,
    onPrimary = md_theme_dark_onPrimary_yellow,
    primaryContainer = md_theme_dark_primaryContainer_yellow,
    onPrimaryContainer = md_theme_dark_onPrimaryContainer_yellow,
    secondary = md_theme_dark_secondary_yellow,
    onSecondary = md_theme_dark_onSecondary_yellow,
    secondaryContainer = md_theme_dark_secondaryContainer_yellow,
    onSecondaryContainer = md_theme_dark_onSecondaryContainer_yellow,
    tertiary = md_theme_dark_tertiary_yellow,
    onTertiary = md_theme_dark_onTertiary_yellow,
    tertiaryContainer = md_theme_dark_tertiaryContainer_yellow,
    onTertiaryContainer = md_theme_dark_onTertiaryContainer_yellow,
    error = md_theme_dark_error_yellow,
    errorContainer = md_theme_dark_errorContainer_yellow,
    onError = md_theme_dark_onError_yellow,
    onErrorContainer = md_theme_dark_onErrorContainer_yellow,
    background = md_theme_dark_background_yellow,
    onBackground = md_theme_dark_onBackground_yellow,
    surface = md_theme_dark_surface_yellow,
    onSurface = md_theme_dark_onSurface_yellow,
    surfaceVariant = md_theme_dark_surfaceVariant_yellow,
    onSurfaceVariant = md_theme_dark_onSurfaceVariant_yellow,
    outline = md_theme_dark_outline_yellow,
    inverseOnSurface = md_theme_dark_inverseOnSurface_yellow,
    inverseSurface = md_theme_dark_inverseSurface_yellow,
    inversePrimary = md_theme_dark_inversePrimary_yellow,
    surfaceTint = md_theme_dark_surfaceTint_yellow,
    outlineVariant = md_theme_dark_outlineVariant_yellow,
    scrim = md_theme_dark_scrim_yellow,
)


val LightColorsCyan = lightColorScheme(
    primary = md_theme_light_primary_cyan,
    onPrimary = md_theme_light_onPrimary_cyan,
    primaryContainer = md_theme_light_primaryContainer_cyan,
    onPrimaryContainer = md_theme_light_onPrimaryContainer_cyan,
    secondary = md_theme_light_secondary_cyan,
    onSecondary = md_theme_light_onSecondary_cyan,
    secondaryContainer = md_theme_light_secondaryContainer_cyan,
    onSecondaryContainer = md_theme_light_onSecondaryContainer_cyan,
    tertiary = md_theme_light_tertiary_cyan,
    onTertiary = md_theme_light_onTertiary_cyan,
    tertiaryContainer = md_theme_light_tertiaryContainer_cyan,
    onTertiaryContainer = md_theme_light_onTertiaryContainer_cyan,
    error = md_theme_light_error_cyan,
    errorContainer = md_theme_light_errorContainer_cyan,
    onError = md_theme_light_onError_cyan,
    onErrorContainer = md_theme_light_onErrorContainer_cyan,
    background = md_theme_light_background_cyan,
    onBackground = md_theme_light_onBackground_cyan,
    surface = md_theme_light_surface_cyan,
    onSurface = md_theme_light_onSurface_cyan,
    surfaceVariant = md_theme_light_surfaceVariant_cyan,
    onSurfaceVariant = md_theme_light_onSurfaceVariant_cyan,
    outline = md_theme_light_outline_cyan,
    inverseOnSurface = md_theme_light_inverseOnSurface_cyan,
    inverseSurface = md_theme_light_inverseSurface_cyan,
    inversePrimary = md_theme_light_inversePrimary_cyan,
    surfaceTint = md_theme_light_surfaceTint_cyan,
    outlineVariant = md_theme_light_outlineVariant_cyan,
    scrim = md_theme_light_scrim_cyan,
)

val DarkColorsCyan = darkColorScheme(
    primary = md_theme_dark_primary_cyan,
    onPrimary = md_theme_dark_onPrimary_cyan,
    primaryContainer = md_theme_dark_primaryContainer_cyan,
    onPrimaryContainer = md_theme_dark_onPrimaryContainer_cyan,
    secondary = md_theme_dark_secondary_cyan,
    onSecondary = md_theme_dark_onSecondary_cyan,
    secondaryContainer = md_theme_dark_secondaryContainer_cyan,
    onSecondaryContainer = md_theme_dark_onSecondaryContainer_cyan,
    tertiary = md_theme_dark_tertiary_cyan,
    onTertiary = md_theme_dark_onTertiary_cyan,
    tertiaryContainer = md_theme_dark_tertiaryContainer_cyan,
    onTertiaryContainer = md_theme_dark_onTertiaryContainer_cyan,
    error = md_theme_dark_error_cyan,
    errorContainer = md_theme_dark_errorContainer_cyan,
    onError = md_theme_dark_onError_cyan,
    onErrorContainer = md_theme_dark_onErrorContainer_cyan,
    background = md_theme_dark_background_cyan,
    onBackground = md_theme_dark_onBackground_cyan,
    surface = md_theme_dark_surface_cyan,
    onSurface = md_theme_dark_onSurface_cyan,
    surfaceVariant = md_theme_dark_surfaceVariant_cyan,
    onSurfaceVariant = md_theme_dark_onSurfaceVariant_cyan,
    outline = md_theme_dark_outline_cyan,
    inverseOnSurface = md_theme_dark_inverseOnSurface_cyan,
    inverseSurface = md_theme_dark_inverseSurface_cyan,
    inversePrimary = md_theme_dark_inversePrimary_cyan,
    surfaceTint = md_theme_dark_surfaceTint_cyan,
    outlineVariant = md_theme_dark_outlineVariant_cyan,
    scrim = md_theme_dark_scrim_cyan,
)


val LightColorsMagenta = lightColorScheme(
    primary = md_theme_light_primary_magenta,
    onPrimary = md_theme_light_onPrimary_magenta,
    primaryContainer = md_theme_light_primaryContainer_magenta,
    onPrimaryContainer = md_theme_light_onPrimaryContainer_magenta,
    secondary = md_theme_light_secondary_magenta,
    onSecondary = md_theme_light_onSecondary_magenta,
    secondaryContainer = md_theme_light_secondaryContainer_magenta,
    onSecondaryContainer = md_theme_light_onSecondaryContainer_magenta,
    tertiary = md_theme_light_tertiary_magenta,
    onTertiary = md_theme_light_onTertiary_magenta,
    tertiaryContainer = md_theme_light_tertiaryContainer_magenta,
    onTertiaryContainer = md_theme_light_onTertiaryContainer_magenta,
    error = md_theme_light_error_magenta,
    errorContainer = md_theme_light_errorContainer_magenta,
    onError = md_theme_light_onError_magenta,
    onErrorContainer = md_theme_light_onErrorContainer_magenta,
    background = md_theme_light_background_magenta,
    onBackground = md_theme_light_onBackground_magenta,
    surface = md_theme_light_surface_magenta,
    onSurface = md_theme_light_onSurface_magenta,
    surfaceVariant = md_theme_light_surfaceVariant_magenta,
    onSurfaceVariant = md_theme_light_onSurfaceVariant_magenta,
    outline = md_theme_light_outline_magenta,
    inverseOnSurface = md_theme_light_inverseOnSurface_magenta,
    inverseSurface = md_theme_light_inverseSurface_magenta,
    inversePrimary = md_theme_light_inversePrimary_magenta,
    surfaceTint = md_theme_light_surfaceTint_magenta,
    outlineVariant = md_theme_light_outlineVariant_magenta,
    scrim = md_theme_light_scrim_magenta,
)

val DarkColorsMagenta = darkColorScheme(
    primary = md_theme_dark_primary_magenta,
    onPrimary = md_theme_dark_onPrimary_magenta,
    primaryContainer = md_theme_dark_primaryContainer_magenta,
    onPrimaryContainer = md_theme_dark_onPrimaryContainer_magenta,
    secondary = md_theme_dark_secondary_magenta,
    onSecondary = md_theme_dark_onSecondary_magenta,
    secondaryContainer = md_theme_dark_secondaryContainer_magenta,
    onSecondaryContainer = md_theme_dark_onSecondaryContainer_magenta,
    tertiary = md_theme_dark_tertiary_magenta,
    onTertiary = md_theme_dark_onTertiary_magenta,
    tertiaryContainer = md_theme_dark_tertiaryContainer_magenta,
    onTertiaryContainer = md_theme_dark_onTertiaryContainer_magenta,
    error = md_theme_dark_error_magenta,
    errorContainer = md_theme_dark_errorContainer_magenta,
    onError = md_theme_dark_onError_magenta,
    onErrorContainer = md_theme_dark_onErrorContainer_magenta,
    background = md_theme_dark_background_magenta,
    onBackground = md_theme_dark_onBackground_magenta,
    surface = md_theme_dark_surface_magenta,
    onSurface = md_theme_dark_onSurface_magenta,
    surfaceVariant = md_theme_dark_surfaceVariant_magenta,
    onSurfaceVariant = md_theme_dark_onSurfaceVariant_magenta,
    outline = md_theme_dark_outline_magenta,
    inverseOnSurface = md_theme_dark_inverseOnSurface_magenta,
    inverseSurface = md_theme_dark_inverseSurface_magenta,
    inversePrimary = md_theme_dark_inversePrimary_magenta,
    surfaceTint = md_theme_dark_surfaceTint_magenta,
    outlineVariant = md_theme_dark_outlineVariant_magenta,
    scrim = md_theme_dark_scrim_magenta,
)


val LightColorsOrange = lightColorScheme(
    primary = md_theme_light_primary_orange,
    onPrimary = md_theme_light_onPrimary_orange,
    primaryContainer = md_theme_light_primaryContainer_orange,
    onPrimaryContainer = md_theme_light_onPrimaryContainer_orange,
    secondary = md_theme_light_secondary_orange,
    onSecondary = md_theme_light_onSecondary_orange,
    secondaryContainer = md_theme_light_secondaryContainer_orange,
    onSecondaryContainer = md_theme_light_onSecondaryContainer_orange,
    tertiary = md_theme_light_tertiary_orange,
    onTertiary = md_theme_light_onTertiary_orange,
    tertiaryContainer = md_theme_light_tertiaryContainer_orange,
    onTertiaryContainer = md_theme_light_onTertiaryContainer_orange,
    error = md_theme_light_error_orange,
    errorContainer = md_theme_light_errorContainer_orange,
    onError = md_theme_light_onError_orange,
    onErrorContainer = md_theme_light_onErrorContainer_orange,
    background = md_theme_light_background_orange,
    onBackground = md_theme_light_onBackground_orange,
    surface = md_theme_light_surface_orange,
    onSurface = md_theme_light_onSurface_orange,
    surfaceVariant = md_theme_light_surfaceVariant_orange,
    onSurfaceVariant = md_theme_light_onSurfaceVariant_orange,
    outline = md_theme_light_outline_orange,
    inverseOnSurface = md_theme_light_inverseOnSurface_orange,
    inverseSurface = md_theme_light_inverseSurface_orange,
    inversePrimary = md_theme_light_inversePrimary_orange,
    surfaceTint = md_theme_light_surfaceTint_orange,
    outlineVariant = md_theme_light_outlineVariant_orange,
    scrim = md_theme_light_scrim_orange,
)

val DarkColorsOrange = darkColorScheme(
    primary = md_theme_dark_primary_orange,
    onPrimary = md_theme_dark_onPrimary_orange,
    primaryContainer = md_theme_dark_primaryContainer_orange,
    onPrimaryContainer = md_theme_dark_onPrimaryContainer_orange,
    secondary = md_theme_dark_secondary_orange,
    onSecondary = md_theme_dark_onSecondary_orange,
    secondaryContainer = md_theme_dark_secondaryContainer_orange,
    onSecondaryContainer = md_theme_dark_onSecondaryContainer_orange,
    tertiary = md_theme_dark_tertiary_orange,
    onTertiary = md_theme_dark_onTertiary_orange,
    tertiaryContainer = md_theme_dark_tertiaryContainer_orange,
    onTertiaryContainer = md_theme_dark_onTertiaryContainer_orange,
    error = md_theme_dark_error_orange,
    errorContainer = md_theme_dark_errorContainer_orange,
    onError = md_theme_dark_onError_orange,
    onErrorContainer = md_theme_dark_onErrorContainer_orange,
    background = md_theme_dark_background_orange,
    onBackground = md_theme_dark_onBackground_orange,
    surface = md_theme_dark_surface_orange,
    onSurface = md_theme_dark_onSurface_orange,
    surfaceVariant = md_theme_dark_surfaceVariant_orange,
    onSurfaceVariant = md_theme_dark_onSurfaceVariant_orange,
    outline = md_theme_dark_outline_orange,
    inverseOnSurface = md_theme_dark_inverseOnSurface_orange,
    inverseSurface = md_theme_dark_inverseSurface_orange,
    inversePrimary = md_theme_dark_inversePrimary_orange,
    surfaceTint = md_theme_dark_surfaceTint_orange,
    outlineVariant = md_theme_dark_outlineVariant_orange,
    scrim = md_theme_dark_scrim_orange,
)


val LightColorsPink = lightColorScheme(
    primary = md_theme_light_primary_pink,
    onPrimary = md_theme_light_onPrimary_pink,
    primaryContainer = md_theme_light_primaryContainer_pink,
    onPrimaryContainer = md_theme_light_onPrimaryContainer_pink,
    secondary = md_theme_light_secondary_pink,
    onSecondary = md_theme_light_onSecondary_pink,
    secondaryContainer = md_theme_light_secondaryContainer_pink,
    onSecondaryContainer = md_theme_light_onSecondaryContainer_pink,
    tertiary = md_theme_light_tertiary_pink,
    onTertiary = md_theme_light_onTertiary_pink,
    tertiaryContainer = md_theme_light_tertiaryContainer_pink,
    onTertiaryContainer = md_theme_light_onTertiaryContainer_pink,
    error = md_theme_light_error_pink,
    errorContainer = md_theme_light_errorContainer_pink,
    onError = md_theme_light_onError_pink,
    onErrorContainer = md_theme_light_onErrorContainer_pink,
    background = md_theme_light_background_pink,
    onBackground = md_theme_light_onBackground_pink,
    surface = md_theme_light_surface_pink,
    onSurface = md_theme_light_onSurface_pink,
    surfaceVariant = md_theme_light_surfaceVariant_pink,
    onSurfaceVariant = md_theme_light_onSurfaceVariant_pink,
    outline = md_theme_light_outline_pink,
    inverseOnSurface = md_theme_light_inverseOnSurface_pink,
    inverseSurface = md_theme_light_inverseSurface_pink,
    inversePrimary = md_theme_light_inversePrimary_pink,
    surfaceTint = md_theme_light_surfaceTint_pink,
    outlineVariant = md_theme_light_outlineVariant_pink,
    scrim = md_theme_light_scrim_pink,
)

val DarkColorsPink = darkColorScheme(
    primary = md_theme_dark_primary_pink,
    onPrimary = md_theme_dark_onPrimary_pink,
    primaryContainer = md_theme_dark_primaryContainer_pink,
    onPrimaryContainer = md_theme_dark_onPrimaryContainer_pink,
    secondary = md_theme_dark_secondary_pink,
    onSecondary = md_theme_dark_onSecondary_pink,
    secondaryContainer = md_theme_dark_secondaryContainer_pink,
    onSecondaryContainer = md_theme_dark_onSecondaryContainer_pink,
    tertiary = md_theme_dark_tertiary_pink,
    onTertiary = md_theme_dark_onTertiary_pink,
    tertiaryContainer = md_theme_dark_tertiaryContainer_pink,
    onTertiaryContainer = md_theme_dark_onTertiaryContainer_pink,
    error = md_theme_dark_error_pink,
    errorContainer = md_theme_dark_errorContainer_pink,
    onError = md_theme_dark_onError_pink,
    onErrorContainer = md_theme_dark_onErrorContainer_pink,
    background = md_theme_dark_background_pink,
    onBackground = md_theme_dark_onBackground_pink,
    surface = md_theme_dark_surface_pink,
    onSurface = md_theme_dark_onSurface_pink,
    surfaceVariant = md_theme_dark_surfaceVariant_pink,
    onSurfaceVariant = md_theme_dark_onSurfaceVariant_pink,
    outline = md_theme_dark_outline_pink,
    inverseOnSurface = md_theme_dark_inverseOnSurface_pink,
    inverseSurface = md_theme_dark_inverseSurface_pink,
    inversePrimary = md_theme_dark_inversePrimary_pink,
    surfaceTint = md_theme_dark_surfaceTint_pink,
    outlineVariant = md_theme_dark_outlineVariant_pink,
    scrim = md_theme_dark_scrim_pink,
)